{"ast":null,"code":"var _jsxFileName = \"/home/luiza/Desktop/Driven/projeto_13_my-wallet/front/src/components/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Container, Statement } from \"./style\";\nimport { useNavigate } from \"react-router-dom\";\nimport Top from \"../Top\";\nimport Menu from \"../Menu\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { getTransaction } from \"../../services/mywallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const [records, setRecords] = useState([]);\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const [total, setTotal] = useState(0);\n  const config = {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    renderHomePage();\n  }, []);\n\n  function renderHomePage() {\n    const promise = getTransaction(config);\n    promise.then(response => {\n      setRecords(response.data);\n      calcTotal();\n    });\n  }\n\n  function calcTotal() {\n    const depositValue = records.filter(t => t.type === \"deposit\").value;\n    const withdrawValue = records.filter(t => t.type === \"withdraw\").value;\n    let totalDeposit = 0;\n    let totalWithdraw = 0;\n\n    for (const value of depositValue) {\n      totalDeposit += value;\n    }\n\n    for (const value of withdrawValue) {\n      totalWithdraw += value;\n    }\n\n    setTotal(totalDeposit - totalWithdraw);\n  }\n\n  if (records === \"\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statement, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"N\\xE3o h\\xE1 registros de entrada ou sa\\xEDda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  for (const record of records) {\n    if (record.type === \"deposit\") total += parseFloat(record.addValue);else total -= parseFloat(record.addValue);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      total: total,\n      children: [/*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statement, {\n        children: records.reverse().map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n          type: record.type,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: record.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"amount\",\n            children: parseFloat(record.addValue).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, record._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HomePage, \"PFbqJeZZ2s3aMNOynIIKQ0QVg8o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/luiza/Desktop/Driven/projeto_13_my-wallet/front/src/components/HomePage/index.js"],"names":["useState","useEffect","useContext","Container","Statement","useNavigate","Top","Menu","UserContext","getTransaction","HomePage","records","setRecords","user","setUser","total","setTotal","config","headers","Authorization","token","navigate","renderHomePage","promise","then","response","data","calcTotal","depositValue","filter","t","type","value","withdrawValue","totalDeposit","totalWithdraw","record","parseFloat","addValue","reverse","map","date","toFixed","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { Container, Statement } from \"./style\";\nimport { useNavigate } from \"react-router-dom\";\nimport Top from \"../Top\";\nimport Menu from \"../Menu\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { getTransaction } from \"../../services/mywallet\";\n\nexport default function HomePage() {\n  const [records, setRecords] = useState([]);\n  const { user, setUser } = useContext(UserContext);\n  const [total, setTotal] = useState(0);\n  const config = { headers: { Authorization: `Bearer ${user.token}` } };\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    renderHomePage();\n  }, []);\n\n  function renderHomePage() {\n    const promise = getTransaction(config);\n    promise.then((response) => {\n      setRecords(response.data);\n      calcTotal();\n    });\n  }\n\n  function calcTotal() {\n    const depositValue = records.filter((t) => t.type === \"deposit\").value;\n    const withdrawValue = records.filter((t) => t.type === \"withdraw\").value;\n    let totalDeposit = 0;\n    let totalWithdraw = 0;\n\n    for (const value of depositValue) {\n      totalDeposit += value;\n    }\n    for (const value of withdrawValue) {\n      totalWithdraw += value;\n    }\n    setTotal(totalDeposit - totalWithdraw);\n  }\n\n  if (records === \"\") {\n    return (\n      <>\n        <Container>\n          <Top />\n          <Statement>\n            <div className=\"center\">\n              <span>Não há registros de entrada ou saída</span>\n            </div>\n          </Statement>\n          <Menu />\n        </Container>\n      </>\n    );\n  }\n\n  for (const record of records) {\n    if (record.type === \"deposit\") total += parseFloat(record.addValue);\n    else total -= parseFloat(record.addValue);\n  }\n\n  return (\n    <>\n      <Container total={total}>\n        <Top />\n        <Statement>\n          {records.reverse().map((record) => (\n            <div type={record.type} key={record._id}>\n              <span>{record.date}</span>\n\n              <span className=\"amount\">\n                {parseFloat(record.addValue).toFixed(2)}\n              </span>\n            </div>\n          ))}\n        </Statement>\n        <Menu />\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}