{"ast":null,"code":"var _jsxFileName = \"/home/luiza/Desktop/Driven/projeto_13_my-wallet/front/src/components/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Container, Statement, Total } from \"./style\";\nimport { useNavigate } from \"react-router-dom\";\nimport Top from \"../Top\";\nimport Menu from \"../Menu\";\nimport Money from \"../Money\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { getTransaction } from \"../../services/mywallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const [records, setRecords] = useState([]);\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const [userTotal, setUserTotal] = useState(0);\n  const config = {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    renderHomePage();\n  }, []);\n\n  function renderHomePage() {\n    const promise = getTransaction(config);\n    promise.then(response => {\n      setRecords(response.data);\n      calcTotal();\n    });\n  }\n\n  function calcTotal() {\n    const depositValue = records.filter(t => t.type === \"deposit\").value;\n    const withdrawValue = records.filter(t => t.type === \"withdraw\").value;\n    let totalDeposit = 0;\n    let totalWithdraw = 0;\n\n    for (const value of depositValue) {\n      totalDeposit += value;\n    }\n\n    for (const value of withdrawValue) {\n      totalWithdraw += value;\n    }\n\n    setUserTotal(totalDeposit - totalWithdraw);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statement, {\n        children: [records.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"N\\xE3o h\\xE1 registros de entrada ou sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : records.map((t, i) => /*#__PURE__*/_jsxDEV(Money, {\n          money: t\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 35\n        }, this)), /*#__PURE__*/_jsxDEV(Total, {\n          children: [\" \", \"Saldo\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: userTotal >= 0 ? \"green\" : \"red\",\n            children: userTotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HomePage, \"/ofovqUe4dPTqoojNusjX0hmHw8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/luiza/Desktop/Driven/projeto_13_my-wallet/front/src/components/HomePage/index.js"],"names":["useState","useEffect","useContext","Container","Statement","Total","useNavigate","Top","Menu","Money","UserContext","getTransaction","HomePage","records","setRecords","user","setUser","userTotal","setUserTotal","config","headers","Authorization","token","navigate","renderHomePage","promise","then","response","data","calcTotal","depositValue","filter","t","type","value","withdrawValue","totalDeposit","totalWithdraw","length","map","i"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,KAA/B,QAA4C,SAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEe,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBd,UAAU,CAACQ,WAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMmB,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASN,IAAI,CAACO,KAAM;AAAtC;AAAX,GAAf;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,cAAT,GAA0B;AACxB,UAAMC,OAAO,GAAGd,cAAc,CAACQ,MAAD,CAA9B;AACAM,IAAAA,OAAO,CAACC,IAAR,CAAcC,QAAD,IAAc;AACzBb,MAAAA,UAAU,CAACa,QAAQ,CAACC,IAAV,CAAV;AACAC,MAAAA,SAAS;AACV,KAHD;AAID;;AAED,WAASA,SAAT,GAAqB;AACnB,UAAMC,YAAY,GAAGjB,OAAO,CAACkB,MAAR,CAAgBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,SAAjC,EAA4CC,KAAjE;AACA,UAAMC,aAAa,GAAGtB,OAAO,CAACkB,MAAR,CAAgBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,UAAjC,EAA6CC,KAAnE;AACA,QAAIE,YAAY,GAAG,CAAnB;AACA,QAAIC,aAAa,GAAG,CAApB;;AAEA,SAAK,MAAMH,KAAX,IAAoBJ,YAApB,EAAkC;AAChCM,MAAAA,YAAY,IAAIF,KAAhB;AACD;;AACD,SAAK,MAAMA,KAAX,IAAoBC,aAApB,EAAmC;AACjCE,MAAAA,aAAa,IAAIH,KAAjB;AACD;;AACDhB,IAAAA,YAAY,CAACkB,YAAY,GAAGC,aAAhB,CAAZ;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,mBACGxB,OAAO,CAACyB,MAAR,KAAmB,CAAnB,gBACC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,GAKCzB,OAAO,CAAC0B,GAAR,CAAY,CAACP,CAAD,EAAIQ,CAAJ,kBAAU,QAAC,KAAD;AAAO,UAAA,KAAK,EAAER;AAAd,WAAsBQ,CAAtB;AAAA;AAAA;AAAA;AAAA,gBAAtB,CANJ,eAQE,QAAC,KAAD;AAAA,qBACG,GADH,WAEQ,GAFR,eAGE;AAAM,YAAA,SAAS,EAAEvB,SAAS,IAAI,CAAb,GAAiB,OAAjB,GAA2B,KAA5C;AAAA,sBACGA;AADH;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;GA1DuBL,Q;UAKLN,W;;;KALKM,Q","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { Container, Statement, Total } from \"./style\";\nimport { useNavigate } from \"react-router-dom\";\nimport Top from \"../Top\";\nimport Menu from \"../Menu\";\nimport Money from \"../Money\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { getTransaction } from \"../../services/mywallet\";\n\nexport default function HomePage() {\n  const [records, setRecords] = useState([]);\n  const { user, setUser } = useContext(UserContext);\n  const [userTotal, setUserTotal] = useState(0);\n  const config = { headers: { Authorization: `Bearer ${user.token}` } };\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    renderHomePage();\n  }, []);\n\n  function renderHomePage() {\n    const promise = getTransaction(config);\n    promise.then((response) => {\n      setRecords(response.data);\n      calcTotal();\n    });\n  }\n\n  function calcTotal() {\n    const depositValue = records.filter((t) => t.type === \"deposit\").value;\n    const withdrawValue = records.filter((t) => t.type === \"withdraw\").value;\n    let totalDeposit = 0;\n    let totalWithdraw = 0;\n\n    for (const value of depositValue) {\n      totalDeposit += value;\n    }\n    for (const value of withdrawValue) {\n      totalWithdraw += value;\n    }\n    setUserTotal(totalDeposit - totalWithdraw);\n  }\n\n  return (\n    <>\n      <Container>\n        <Top />\n        <Statement>\n          {records.length === 0 ? (\n            <div className=\"center\">\n              <span>Não há registros de entrada ou saída</span>\n            </div>\n          ) : (\n            records.map((t, i) => <Money money={t} key={i} />)\n          )}\n          <Total>\n            {\" \"}\n            Saldo{\" \"}\n            <span className={userTotal >= 0 ? \"green\" : \"red\"}>\n              {userTotal}\n            </span>\n          </Total>\n        </Statement>\n        <Menu />\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}