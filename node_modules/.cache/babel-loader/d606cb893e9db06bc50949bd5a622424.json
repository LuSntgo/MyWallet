{"ast":null,"code":"var _jsxFileName = \"/home/luiza/Desktop/Driven/projeto_13_my-wallet/front/src/components/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Container, Statement, Total } from \"./style\";\nimport Top from \"../Top\";\nimport Menu from \"../Menu\";\nimport Money from \"../Money\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { getTransaction } from \"../../services/mywallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const [formData, setFormData] = useState([]);\n  const {\n    user\n  } = useContext(UserContext);\n  const [userTotal, setUserTotal] = useState(0);\n  const config = {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n  useEffect(() => {\n    renderHomePage();\n  }, []);\n\n  function renderHomePage() {\n    const promise = getTransaction(config);\n    promise.then(response => {\n      setFormData(response.data);\n      let totalDeposit = 0;\n      let totalWithdraw = 0;\n\n      for (let i = 0; i < formData.length; i++) {\n        if (formData[i].type === \"deposit\") {\n          const depositValue = formData[i].value;\n          totalDeposit += parseFloat(depositValue);\n        } else {\n          const withdrawValue = formData[i].value;\n          totalWithdraw += parseFloat(withdrawValue);\n        }\n\n        setUserTotal((totalDeposit - totalWithdraw).toFixed(2));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statement, {\n        children: [formData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"N\\xE3o h\\xE1 registros de entrada ou sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : formData.map((r, i) => /*#__PURE__*/_jsxDEV(Money, {\n          money: r\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 36\n        }, this)), /*#__PURE__*/_jsxDEV(Total, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Saldo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: userTotal >= 0 ? \"green\" : \"red\",\n            children: userTotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HomePage, \"c8gAo4gbAMhBb9pyj4IBllR3yrE=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/luiza/Desktop/Driven/projeto_13_my-wallet/front/src/components/HomePage/index.js"],"names":["useState","useEffect","useContext","Container","Statement","Total","Top","Menu","Money","UserContext","getTransaction","HomePage","formData","setFormData","user","userTotal","setUserTotal","config","headers","Authorization","token","renderHomePage","promise","then","response","data","totalDeposit","totalWithdraw","i","length","type","depositValue","value","parseFloat","withdrawValue","toFixed","map","r"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { Container, Statement, Total } from \"./style\";\nimport Top from \"../Top\";\nimport Menu from \"../Menu\";\nimport Money from \"../Money\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { getTransaction } from \"../../services/mywallet\";\n\nexport default function HomePage() {\n  const [formData, setFormData] = useState([]);\n  const { user } = useContext(UserContext);\n  const [userTotal, setUserTotal] = useState(0);\n  const config = { headers: { Authorization: `Bearer ${user.token}` } };\n\n  useEffect(() => {\n    renderHomePage();\n  }, []);\n\n  function renderHomePage() {\n    const promise = getTransaction(config);\n    promise.then((response) => {\n      setFormData(response.data);\n      let totalDeposit = 0;\n      let totalWithdraw = 0;\n\n      for (let i = 0; i < formData.length; i++) {\n        if (formData[i].type === \"deposit\") {\n          const depositValue = formData[i].value;\n          totalDeposit += parseFloat(depositValue);\n        } else {\n          const withdrawValue = formData[i].value;\n          totalWithdraw += parseFloat(withdrawValue);\n        }\n        setUserTotal((totalDeposit - totalWithdraw).toFixed(2));\n      }\n    });\n  }\n\n  return (\n    <>\n      <Container>\n        <Top />\n        <Statement>\n          {formData.length === 0 ? (\n            <div className=\"center\">\n              <span>Não há registros de entrada ou saída</span>\n            </div>\n          ) : (\n            formData.map((r, i) => <Money money={r} key={i} />)\n          )}\n          <Total>\n            <p>Saldo</p>{\" \"}\n            <span className={userTotal >= 0 ? \"green\" : \"red\"}>\n              {userTotal}\n            </span>\n          </Total>\n        </Statement>\n        <Menu />\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}